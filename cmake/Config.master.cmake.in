include(CMakeFindDependencyMacro)

set(_supported_components driverlib drivers utils)

foreach(_comp ${@PROJECT_NAME@_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _supported_components )
    set(@PROJECT_NAME@_FOUND False)
    set(@PROJECT_NAME@_NOTFOUND_MESSAGE "Specified unsupported component: ${_comp}")
  endif()
  message(STATUS "Adding ${_comp} ")
  include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@/${_comp}Targets.cmake")
endforeach()


# if (NOT @PROJECT_NAME@_FIND_COMPONENTS)
#     set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "The @PROJECT_NAME@ package requires at least one component")
#     set(@PROJECT_NAME@_FOUND False)
#     return()
# endif()

# set(_@PROJECT_NAME@_FIND_PARTS_REQUIRED)
# if (@PROJECT_NAME@_FIND_REQUIRED)
#     set(_Qt5_FIND_PARTS_REQUIRED REQUIRED)
# endif()
# set(_@PROJECT_NAME@_FIND_PARTS_QUIET)
# if (@PROJECT_NAME@_FIND_QUIETLY)
#     set(_@PROJECT_NAME@_FIND_PARTS_QUIET QUIET)
# endif()

# get_filename_component(_qt5_install_prefix "${CMAKE_CURRENT_LIST_DIR}/.." ABSOLUTE)

# set(_@PROJECT_NAME@_NOTFOUND_MESSAGE)

# foreach(module ${@PROJECT_NAME@_FIND_COMPONENTS})

#   find_package(@PROJECT_NAME@${module}
#         ${_@PROJECT_NAME@_FIND_PARTS_QUIET}
#         ${_@PROJECT_NAME@_FIND_PARTS_REQUIRED}
#         PATHS "${_qt5_install_prefix}" NO_DEFAULT_PATH
#     )
#     if (NOT @PROJECT_NAME@${module}_FOUND)
#         if (@PROJECT_NAME@_FIND_REQUIRED_${module})
#             set(_@PROJECT_NAME@_NOTFOUND_MESSAGE "${_@PROJECT_NAME@_NOTFOUND_MESSAGE}Failed to find @PROJECT_NAME@ component ${module}")
#         elseif(NOT @PROJECT_NAME@_FIND_QUIETLY)
#             message(WARNING "Failed to find @PROJECT_NAME@ component \"${module}\" config ")
#         endif()
#     endif()
# endforeach()

# if (_@PROJECT_NAME@_NOTFOUND_MESSAGE)
#     set(@PROJECT_NAME@_NOT_FOUND_MESSAGE "${_@PROJECT_NAME@_NOTFOUND_MESSAGE}")
#     set(@PROJECT_NAME@_FOUND False)
# endif()

# #_qt5_Core_check_file_exists("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@ConfigVersion.cmake")
